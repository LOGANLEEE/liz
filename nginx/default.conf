proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream liz-web-upstream {
  server liz-web:3000;
}

server {
  listen 80 default_server;

  server_name _;

  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

# location /.next/static {
  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://liz-web-upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://liz-web-upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    proxy_pass http://liz-web-upstream;
  }
}

# upstream my_nodejs_upstream {
#     server 127.0.0.1:3000;
#     keepalive 64;
# }

# server {
#     listen 443 ssl;
    
#     server_name www.my-website.com;
#     ssl_certificate_key /etc/ssl/main.key;
#     ssl_certificate     /etc/ssl/main.crt;
   
#     location / {
#     	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Real-IP $remote_addr;
#     	proxy_set_header Host $http_host;
        
#     	proxy_http_version 1.1;
#     	proxy_set_header Upgrade $http_upgrade;
#     	proxy_set_header Connection "upgrade";
        
#     	proxy_pass http://my_nodejs_upstream/;
#     	proxy_redirect off;
#     	proxy_read_timeout 240s;
#     }
# }