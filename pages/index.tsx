import { Grid } from '@nextui-org/react';
import type { fresh_post } from '@prisma/client';
import { BottomPagination } from 'components/BottomPagination';
import { InfoBar } from 'containers/InfoBar';
import { PostContainer } from 'containers/PostContainer';
import { usePagination } from 'hook/usePagination';
import { _axios } from 'lib/axiosInstance';
import type { GetFreshPostReturn } from 'lib/crawl/logic/post';
import { names } from 'lib/crawl/targetInfo';
import Head from 'next/head';
import Image from 'next/image';
import { useEffect, useState } from 'react';
import useSWR from 'swr';

type Props = {
	// posts: fresh_post[];
	// totalCount: number;
	some?: any;
};

console.log('mode:', process.env.NEXT_PUBLIC_MODE);

const Home = ({ some }: Props) => {
	const {
		pageIdx,
		limit,
		actions: { pageIdxHandler },
	} = usePagination({});

	const { data, error, isValidating } = useSWR<GetFreshPostReturn>(
		`/api/crawl/getFreshPost/${pageIdx}`,
		async () => await _axios.post(`/api/crawl/getFreshPost`, { limit, offset: (pageIdx - 1) * limit }).then((res) => res.data)
	);

	const [totalCount, setTotalCount] = useState(0);
	const [freshPostList, setFreshPostList] = useState<fresh_post[]>([]);

	useEffect(() => {
		if (data?.list && data?.list?.length > 0) {
			setFreshPostList(data.list);
		}
	}, [data?.list]);

	useEffect(() => {
		if (data?.totalCount && data?.totalCount > 0 && data?.totalCount !== totalCount) {
			setTotalCount(data.totalCount);
		}
	}, [data?.totalCount, totalCount]);

	return (
		<div>
			<Head>
				<title>Seize what you want without NO LIMIT.</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
				<meta name='viewport' content='initial-scale=1, width=device-width' />
			</Head>

			<main>
				<Grid.Container justify='center' direction='row'>
					<Grid xs={0} sm={2} xl={1.5}>
						left
					</Grid>
					<Grid xs={12} sm={8} xl={9}>
						<Grid.Container gap={2} justify='center' direction='row'>
							<InfoBar postCount={totalCount} targetSiteCount={Object.keys(names).length} />
							<PostContainer posts={freshPostList} />
							<div>
								<BottomPagination limit={limit} totalCount={totalCount} page={pageIdx} onChangeHandler={pageIdxHandler} />
							</div>
						</Grid.Container>
					</Grid>
					<Grid xs={0} sm={2} xl={1.5}>
						right
					</Grid>
				</Grid.Container>
			</main>

			<footer>
				<a
					href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
					target='_blank'
					rel='noopener noreferrer'
				>
					<span>
						<Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
					</span>
				</a>
			</footer>
		</div>
	);
};
export default Home;

// export async function getServerSideProps() {
// const { totalCount, list } = await getFreshPost({ limit: 20, offset: 0 });
// return {
// 	props: {
// 		totalCount,
// 		posts: list,
// 	},
// };
// return;
// }
