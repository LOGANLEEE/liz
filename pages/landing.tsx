import type { api_log, fresh_post } from '@prisma/client';
import { getFreshPostCountQuery, visualizeQuery } from 'lib/crawl/logic/post';
import { getRecentAccessLogQuery } from 'lib/log';
import type { GetServerSidePropsContext } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import { getSelectorsByUserAgent } from 'react-device-detect';
import styled from 'styled-components';
import { ChartData } from 'types';

type Props = {
	isMobile: boolean;
	recentAccessLog?: api_log;
	totalPostCount: number;
	topPosts: fresh_post[];
	chartData: ChartData[];
};
const MobileContainer = dynamic(() => import('containers/page/landingPage/MobileContainer'), {});
const DesktopContainer = dynamic(() => import('containers/page/landingPage/DesktopContainer'), {});

const LandingPage = ({ isMobile = true, ...props }: Props) => {
	return (
		<Wrapper>
			<Head>
				<title>Seize what you want without NO LIMIT.</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
				<meta name='viewport' content='initial-scale=1, width=device-width' />
			</Head>
			<main>
				{isMobile && <MobileContainer {...props} />}
				{!isMobile && <DesktopContainer {...props} />}
			</main>
			{/* {isValidating && <CustomLoading />} */}
		</Wrapper>
	);
};

const Wrapper = styled.div``;

export async function getServerSideProps({ req, res }: GetServerSidePropsContext) {
	const userAgent = req.headers['user-agent'] || '';

	const detect = getSelectorsByUserAgent(userAgent);

	const recentAccessLog = await getRecentAccessLogQuery();

	const { topPosts, totalPostCount } = await getFreshPostCountQuery();

	const chartData = await visualizeQuery();

	return {
		props: {
			isMobile: detect?.isMobile,
			recentAccessLog: JSON.parse(JSON.stringify(recentAccessLog)),
			totalPostCount,
			topPosts,
			chartData,
		},
	};
}
export default LandingPage;
